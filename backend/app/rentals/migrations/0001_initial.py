# Generated by Django 3.2.25 on 2025-06-05 02:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(help_text='Marca del vehículo.', max_length=100)),
                ('model', models.CharField(help_text='Modelo del vehículo.', max_length=100)),
                ('year', models.PositiveSmallIntegerField(help_text='Año de fabricación.')),
                ('description', models.TextField(blank=True, help_text='Descripción opcional del vehículo.')),
                ('image_front', models.ImageField(help_text='Imagen frontal del vehículo.', upload_to='cars/front/')),
                ('image_rear', models.ImageField(help_text='Imagen trasera del vehículo.', upload_to='cars/rear/')),
                ('image_interior', models.ImageField(help_text='Imagen del interior del vehículo.', upload_to='cars/interior/')),
                ('registration_document', models.FileField(help_text='Documento que acredita la propiedad del vehículo.', upload_to='cars/registration_docs/')),
                ('daily_rate', models.DecimalField(decimal_places=2, help_text='Tarifa diaria de alquiler.', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el vehículo está disponible para renta.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarRent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(help_text='Fecha y hora de inicio de la renta.')),
                ('end_datetime', models.DateTimeField(help_text='Fecha y hora de fin de la renta.')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Precio total calculado: tarifa diaria × número de días.', max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Estado de la reserva.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to='rentals.car')),
                ('renter', models.ForeignKey(help_text='Usuario que realiza la renta.', on_delete=django.db.models.deletion.CASCADE, related_name='car_rentals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Car Rent',
                'verbose_name_plural': 'Car Rents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre o referencia del estacionamiento.', max_length=150)),
                ('address', models.CharField(help_text='Dirección física del estacionamiento.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Descripción opcional del parking (capacidad, características).')),
                ('image', models.ImageField(help_text='Imagen representativa del estacionamiento.', upload_to='parkings/images/')),
                ('hourly_rate', models.DecimalField(decimal_places=2, help_text='Tarifa por hora de estacionamiento.', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el parking está disponible para renta.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parking',
                'verbose_name_plural': 'Parkings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Renter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driver_license_image', models.ImageField(blank=True, help_text='Foto de la licencia de conducir.', null=True, upload_to='kyc/licenses/')),
                ('photo_id_image', models.ImageField(blank=True, help_text='Foto de identificación del usuario para verificación.', null=True, upload_to='kyc/photo_ids/')),
                ('is_verified', models.BooleanField(default=False, help_text='Indica si el Renter ha completado la verificación de identidad.')),
                ('verified_at', models.DateTimeField(blank=True, help_text='Fecha y hora en que se completó la verificación.', null=True)),
                ('user', models.OneToOneField(help_text='Perfil de Renter asociado a un User.', on_delete=django.db.models.deletion.CASCADE, related_name='renter_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Renter',
                'verbose_name_plural': 'Renters',
            },
        ),
        migrations.CreateModel(
            name='ParkingRent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(help_text='Inicio de la renta (fecha y hora).')),
                ('end_datetime', models.DateTimeField(help_text='Fin de la renta (fecha y hora).')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Precio total calculado: tarifa por hora × número de horas.', max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Estado de la reserva.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rents', to='rentals.parking')),
                ('renter', models.ForeignKey(help_text='Usuario que realiza el alquiler de parking.', on_delete=django.db.models.deletion.CASCADE, related_name='parking_rentals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parking Rent',
                'verbose_name_plural': 'Parking Rents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParkingAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(help_text='Inicio de la disponibilidad.')),
                ('end_datetime', models.DateTimeField(help_text='Fin de la disponibilidad.')),
                ('parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='rentals.parking')),
            ],
            options={
                'verbose_name': 'Parking Availability',
                'verbose_name_plural': 'Parkings Availability',
                'ordering': ['parking', 'start_datetime'],
            },
        ),
        migrations.AddField(
            model_name='parking',
            name='owner',
            field=models.ForeignKey(help_text='El Renter que ofrece este estacionamiento.', on_delete=django.db.models.deletion.CASCADE, related_name='parkings', to='rentals.renter'),
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(help_text='Número de póliza.', max_length=100, unique=True)),
                ('provider_name', models.CharField(help_text='Nombre de la aseguradora.', max_length=150)),
                ('coverage_details', models.TextField(blank=True, help_text='Detalle de la cobertura.')),
                ('premium', models.DecimalField(decimal_places=2, help_text='Costo del seguro.', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('car_rent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='rentals.carrent')),
                ('parking_rent', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insurance', to='rentals.parkingrent')),
            ],
            options={
                'verbose_name': 'Insurance',
                'verbose_name_plural': 'Insurances',
            },
        ),
        migrations.CreateModel(
            name='CarAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(help_text='Inicio de la disponibilidad.')),
                ('end_datetime', models.DateTimeField(help_text='Fin de la disponibilidad.')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='rentals.car')),
            ],
            options={
                'verbose_name': 'Car Availability',
                'verbose_name_plural': 'Cars Availability',
                'ordering': ['car', 'start_datetime'],
            },
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(help_text='El Renter que ofrece este vehículo.', on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='rentals.renter'),
        ),
    ]
